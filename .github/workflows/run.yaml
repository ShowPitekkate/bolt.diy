name: Public Dev Server

name: Public Dev Server

on: workflow_dispatch

jobs:
  expose:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Start development server in background
        run: |
          nohup pnpm run dev > server.log 2>&1 &
          echo $! > server.pid
          sleep 5  # Wait for server to start
          cat server.log
      
      - name: Install Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok
      
      - name: Setup Ngrok auth
        run: ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
      
      - name: Create tunnel and get public URL
        run: |
          ngrok http 3000 > /dev/null &
          sleep 5
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' > url.txt
          echo "Public URL: $(cat url.txt)"
      
      - name: Output public URL
        run: |
          echo "url=$(cat url.txt)" >> $GITHUB_OUTPUT
        id: ngrok-url
      
      - name: Keep alive (60 minutes max)
        run: |
          for i in {1..60}; do
            sleep 60
            echo "Keeping alive... $i minutes passed"
          done
      
      - name: Cleanup
        if: always()
        run: |
          kill $(cat server.pid) || true
          pkill ngrok || truee tunnel and get public URL
        run: |
          ngrok http 3000 > /dev/null &
          sleep 5
          curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' > url.txt
          echo "Public URL: $(cat url.txt)"
      
      - name: Output public URL
        run: |
          echo "url=$(cat url.txt)" >> $GITHUB_OUTPUT
        id: ngrok-url
      
      - name: Print public URL
        run: echo "Your app is available at ${{ steps.ngrok-url.outputs.url }}"
